



RMCAT WG                                                        V. Singh
Internet-Draft                                              callstats.io
Intended status: Experimental                                    M. Nagy
Expires: September 21, 2016                                       J. Ott
                                                        Aalto University
                                                               L. Eggert
                                                                  NetApp
                                                          March 20, 2016


         Congestion Control Using FEC for Conversational Media
                   draft-singh-rmcat-adaptive-fec-03

Abstract

   This document describes a new mechanism for conversational multimedia
   flows.  The proposed mechanism uses Forward Error Correction (FEC)
   encoded RTP packets (redundant packets) along side the media packets
   to probe for available network capacity.  A straightforward
   interpretation is, the sending endpoint increases the transmission
   rate by keeping the media rate constant but increases the amount of
   FEC.  If no losses and discards occur, the endpoint can then increase
   the media rate.  If losses occur, the redundant FEC packets help in
   recovering the lost packets.  Consequently, the endpoint can vary the
   FEC bit rate to conservatively (by a small amount) or aggressively
   (by a large amount) probe for available network capacity.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at http://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on September 21, 2016.








Singh, et al.          Expires September 21, 2016               [Page 1]

Internet-Draft      Using FEC for Congestion Control          March 2016


Copyright Notice

   Copyright (c) 2016 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (http://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.

Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   2
   2.  Terminology . . . . . . . . . . . . . . . . . . . . . . . . .   3
   3.  Concept: FEC for Congestion Control . . . . . . . . . . . . .   4
     3.1.  States  . . . . . . . . . . . . . . . . . . . . . . . . .   6
     3.2.  Framework . . . . . . . . . . . . . . . . . . . . . . . .   7
     3.3.  FEC Scheme  . . . . . . . . . . . . . . . . . . . . . . .   8
     3.4.  Applicability to other RMCAT Schemes  . . . . . . . . . .   9
   4.  Security Considerations . . . . . . . . . . . . . . . . . . .   9
   5.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .  10
   6.  Acknowledgements  . . . . . . . . . . . . . . . . . . . . . .  10
   7.  References  . . . . . . . . . . . . . . . . . . . . . . . . .  10
     7.1.  Normative References  . . . . . . . . . . . . . . . . . .  10
     7.2.  Informative References  . . . . . . . . . . . . . . . . .  11
   Appendix A.  Simulations  . . . . . . . . . . . . . . . . . . . .  13
   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .  13

1.  Introduction

   The Real-time Transport Protocol (RTP) [RFC3550] is widely used in
   voice telephony and video conferencing systems.  Many of these
   systems run over best-effort UDP/IP networks, and are required to
   implement congestion to adapt the transmission rate of the RTP
   streams to match the available network capacity, while maintaing the
   user-experience [I-D.ietf-rmcat-cc-requirements].  The circuit
   breakers [I-D.ietf-avtcore-rtp-circuit-breakers] describe a minimal
   set of conditions when an RTP stream is causing severe congestion and
   should cease transmission.  Consequently, the congestion control
   algorithm are expected to avoid triggering these conditions.

   Conversational multimedia systems use Negative Acknowlegment (NACK),
   Forward Error Correction (FEC), and Reference Picture Selection (RPS)



Singh, et al.          Expires September 21, 2016               [Page 2]

Internet-Draft      Using FEC for Congestion Control          March 2016


   to protect against packet loss.  These are used in addition to the
   codec-dependent resilience methods (for e.g., full intra-refresh and
   error-concealment).  In this way, the multimedia system is anyway
   trading off part of the transmission rate for redundancy or
   retransmissions to reduce the effects of packet loss.  An endpoint
   often prefers using FEC in high latency networks where
   retransmissions may arrive later than the playout time of the packet
   (due to the size of the dejitter buffer) [Holmer13].  Therefore, the
   endpoint needs to adapt the transmission rate to best fit the
   changing network capacity and the amount of redundancy based on the
   observed/expected loss rate and network latency.  Figure 1 shows the
   applicatbility of different error-resilience schemes based on the
   end-to-end latency and the observed packet loss [Devadoss08].

                      ^
                      |            .__________.
                      |            |          |
                      |            |  UEP/FEC |
                    l |____________|____.     |
                    a |            |    |     |
                    t |       RPS  |    |     |
                    e |_______.    |    |     |
                    n |       |    |    |     |
                    c |       |    |____|_____|
                    y | NACK  |         |
                      |       |         |
                      +------------------------------->
                             Packet loss

     Figure 1: Applicability of Error Resilience Schemes based on the
                  network delay and observed packet loss

   In this document, we describe the use of FEC packets not only for
   error-resilience but also as a probing mechanism for congestion
   control (ramping up the transmission rate).

2.  Terminology

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in BCP 14, [RFC2119] and
   indicate requirement levels for compliant implementations.

   The terminology defined in RTP [RFC3550], RTP Profile for Audio and
   Video Conferences with Minimal Control [RFC3551], RTCP Extended
   Report (XR) [RFC3611], Extended RTP Profile for RTCP-based Feedback
   (RTP/AVPF) [RFC4585], RTP Retransmission Payload Format [RFC4588],




Singh, et al.          Expires September 21, 2016               [Page 3]

Internet-Draft      Using FEC for Congestion Control          March 2016


   Forward Error Correction (FEC) Framework [RFC6363], and Support for
   Reduced-Size RTCP [RFC5506] apply.

3.  Concept: FEC for Congestion Control

   FEC is one method for providing error-resilience, it improves
   reliability by adding redundant data to the primary media flow, which
   is used by received to recover packets that have been lost due to
   congestion or bit-errors.  The congestion control algorithm on the
   other hand aims at maximizing the network path utilization, but risks
   over-estimating the avaiable end-to-end network capacity leading to
   congestion (and therefore losses).

   Figure 2 shows the timeline of enabling and disabling FEC.  The main
   idea behind using FEC for congestion control is as follows: the
   sending endpoint chooses a high FEC rate to aggressively probe for
   available capacity and conversely chooses a low FEC rate to
   conservatively probe for available capacity.  During the ramp up, if
   a packet is lost and the FEC packet arrives in time for decoding, the
   receiver is be able to recover the lost packet; if no packet is lost,
   the sender is able to increase the media encoding rate by swapping
   out a part of the FEC rate.  This method can be especially useful
   when the transmission rate is close to the bottleneck link rate: by
   choosing an appropriate FEC rate, the endpoint is able to probe for
   available capacity without changing the target media rate and
   therefore not affecting the user-experience.

   Hence, the congestion control algorithm is always able to probe for
   available capacity, as improved reliability compensates for possible
   errors resulting from probing for additional capacity (i.e., increase
   in observed latency and/or losses).




















Singh, et al.          Expires September 21, 2016               [Page 4]

Internet-Draft      Using FEC for Congestion Control          March 2016


           ^  .........
           | /         \                             /
         t |/           \                           /
         h |   +===+===+=\=+                       /
         r |   | F |   |  \|           +===+   +==/+
         o +===+---+   |   \...........|.F.|...|./F|===+
         u |   |   |   |   |   +===+===+---+===+---+---+
         g |   |   |   |   |   | F |   |   |   |   |   |
         h |   |   |   |   |===+---+   |   |   |   |   |
         p |   |   |   |   |   |   |   |   |   |   |   |
         u |   |   |   |   |   |   |   |   |   |   |   |
         t |   |   |   |   |   |   |   |   |   |   |   |
           | s | p | i | s | d | p | i | p | s | p | i |
           +---+---+---+---+---+---+---+---+---+---+---+-->
                               time

         Key:
         +===+ Media with minimal FEC for error protection

         +===+
         | F | Media with FEC for probing and error protection
         +---+

          ....
         /    \  Available capacity

         d,s,p,i: are the states: Decrease, Stay, Probe, Increase

                Figure 2: Congestion Control enabling FEC.

      +------------+        (B) Good conditions          +-----------+
      |            |------------------------------------>|           |
      |   STEADY   |                                     |   PROBE   |
      |            |<------------------------------------|           |
      +------------+     Probed, but Loss recovered      +-----------+
        /\ |                                               |   /\ |
        |  |(A)                                            |   |  |
        |  |_______________________________________________|   |  |(C)
    (B) |  |                      (A)                          |  |
        |  \/                                              (B) |  \/
      +------------+                                     +------------+
      |            |       (A) Unstable conditions       |            |
      |   REDUCE   |<------------------------------------|  INCREASE  |
      |            |                                     |            |
      +------------+                                     +------------+

       Figure 3: State machine of a Congestion Control enabling FEC.




Singh, et al.          Expires September 21, 2016               [Page 5]

Internet-Draft      Using FEC for Congestion Control          March 2016


3.1.  States

   The Figure 3 illustrates the the state machine of a congestion
   control algorithm incorporating FEC for probing.  The state
   transitions occur based on the information reported in the feedback
   packet.  In Figure 3 (A) indicates congestion, i.e., the congestion
   control observes increasing delay and/or packet loss, or any other
   congestion metric, and in response the congestion control reduces the
   transmission rate.  In Figure 3 (B) occurs when the congestion cues
   report improvement in congestion metrics, and in response the
   congestion cue increases the transmission rate.  For probing using
   FEC, the congestion control needs to map to the following 4 states:
   STEADY, PROBE, INCREASE, and REDUCE.

   o  STEADY state: The congestion control keeps the same target media
      rate and no additional FEC packets are generated for probing.
      This is a transient state, after which the congestion control
      either attempts to increase the transmission rate, or observes
      congestion and reduces the transmission rate.

   o  REDUCE state: The congestion control reduces the transmission rate
      based on the observed congestion cues, and generated no additional
      FEC packets than the minimum required for error-resilience.  If in
      subsequent reports the conditions improve, the congestion control
      can directly transition to the PROBE state.

   o  PROBE state: The congestion control observes no congestion for two
      reporting intervals (i.e., the transmission rate should be
      increased).  The endpoint maintains the same target media bit
      rate, and instead increases the amount of FEC packets, therby
      increasing the transmission rate.

   o  INCREASE state: The endpoint is sending FEC packets and the
      congestion control observes no congestion (as reported in RTCP
      feedback), the media transmission rate is increased while
      maintaining minimal amount of FEC for error protection.  In this
      case, the combined transmission rate (FEC+media) may remain the
      same as in the PROBE state.  If the feedback reports packet loss,
      but some of these lost packets are recovered by the FEC packets,
      the congestion control can keep the same media bit rate and adjust
      the amount of FEC (compared to the previous PROBE state).  If
      congestion is observed (the target rate calculated by the
      congestion control is much lower than the current media rate), the
      congestion control can transition to the REDUCE state and decrease
      the transmission rate.






Singh, et al.          Expires September 21, 2016               [Page 6]

Internet-Draft      Using FEC for Congestion Control          March 2016


3.2.  Framework

   The Figure 4 shows the interaction between the rate control module,
   the RTP and the FEC module.

   At the sender, the rate control module calculates the new bit rate.
   If the new bit rate is higher than the previous than the previous bit
   rate indicates to the FEC module that the congestion control intends
   to probe.  The FEC module depending on its internal state machine
   decides to add FEC for probing or not.  Thereafter it indicates to
   the rate control module the bit rate remaining for the RTP media
   stream, which may be less than equal to the calculated bit rate.

   At the reciver, the FEC module reconstructs lost packets in the
   primary stream from the packets received in the repair stream.  If
   packets are repair it generates the post-repair loss report
   (discussed in Section 3.3) for the corresponding RTP packets.

   At the sender, The FEC module also receives the RTCP Feedback related
   to the primary stream and any post-repair loss report.  It uses the
   information from these RTCP reports to calculate the effectiveness of
   FEC for congestion control and is also the basis for changing its
   internal state.




























Singh, et al.          Expires September 21, 2016               [Page 7]

Internet-Draft      Using FEC for Congestion Control          March 2016


            + - - - - - - - - - - - - - - - - - - - - - - - -+
            | +--------------------------------------------+ |
              |            Media Encoder/Decoder           |
            | +--------------------------------------------+ |
                        |                           |
            | +- -- -- -- -- -- -- -+        +- -- -- -- -+  |
              |    Rate Control     |        |     RTP    |
            | |       Module        |        |            |  |
              +- -- -- -- -- -- -- -+        +- -- -- -- -+
            |   ^        |                          |        |
                |        |                          | Source
            |   | R      +--------------------+     |  RTP   |
                | T                           |     |
            |   | C                           |     |        |
                | P                           |     |
            |   |     +----------+     +----------------+    |
                | F   | FEC Code |<--->|   FEC Module   |
            |   | B   +----------+     +----------------+    |
                |                        |        |  |
            |   |------------------------+        |  |       |
                |        RTCP FB           Repair |  | Source
            |   |                            RTP  |  |   RTP |
                |                                 |  |
            | +--------------------------------------------+ |
              |           RTP Processing  Layer            |
            | |                  (Queue)                   | |
              +--------------------------------------------+
            |                        |                       |
              +--------------------------------------------+
            | |             Transport Layer (UDP)          | |
              +--------------------------------------------+
            |                        |                       |
              +--------------------------------------------+
            | |                     IP                     | |
              +--------------------------------------------+
            |                                                |
            | Endpoint                                       |
            + - - - - - - - - - - - - - - -  - - - - - - - - +

        Figure 4: Interaction of Congestion Control and FEC Module.

3.3.  FEC Scheme

   [RFC6363] describes a framework for using Forward Error Correction
   (FEC) codes with RTP and allows any FEC code to be used with the
   framework.  For this proposal, the FEC packets are created by XORing
   RTP media packets, the resulting redundant RTP packets are encoded
   using the scheme defined in [I-D.ietf-payload-flexible-fec-scheme].



Singh, et al.          Expires September 21, 2016               [Page 8]

Internet-Draft      Using FEC for Congestion Control          March 2016


   The endpoint MAY use a single-frame FEC (1-dimensional) or a multi-
   frame FEC (2-dimensional) for protecting the primary RTP stream.  A
   single-frame FEC protects against a single packet loss and fails when
   burst loss occurs.  Using multi-frame FEC helps mitigate these issues
   at the cost of higher overhead and latency in recovering lost
   packets.  [Holmer13] shows examples of using a single- and multi-
   frame FEC.

   The receiving endpoint may report the post-repair loss (or residual
   loss) using either the report block defined in [RFC5725] (Run-length
   encoding of packets repaired) or in [RFC7509] (packet count of
   repaired packets).

   Additionally, the receiving may report the occurance of losses and
   discards via a run-length encoding (RLE) of lost [RFC3611]
   (Section 4.1), which enables the sender to detect the burst loss
   length and apply appropriate FEC scheme.

   Packet that arrive too late to be played out by the receiver are
   discarded by the de-jitter buffer.  Typically, the de-jitter buffer
   adjust the playout delay based on the observed frame inter-arrival
   delay, so that packets are played out smoothly.  Reporting RLE of
   discarded packets [RFC7097] may further enable a sender to detect
   losses that occur after packet discards.

3.4.  Applicability to other RMCAT Schemes

   [Open issue: The current implementation is delay based and is
   documented in [Nagy14].  However, we would like to generalize the
   concept and apply it to different RMCAT algorithms for e.g., Google's
   Congestion Control algorithm [I-D.ietf-rmcat-gcc], SCReaM
   [I-D.ietf-rmcat-scream-cc], etc.]

4.  Security Considerations

   The security considerations of [RFC3550], RTP/AVPF profile for rapid
   RTCP feedback [RFC4585], circuit breaker
   [I-D.ietf-avtcore-rtp-circuit-breakers], and Generic Forward Error
   Correction [RFC5109] apply.

   If non-authenticated RTCP reports are used, an on-path attacker can
   send forged RTCP feedback packets that can disrupt the operation of
   the underlying congestion control.  Additionally, the forged packets
   can either indicate no packet loss causing the congestion control to
   ramp-up quickly, or indicate high packet loss or RTT causing the
   circuit breaker to trigger.





Singh, et al.          Expires September 21, 2016               [Page 9]

Internet-Draft      Using FEC for Congestion Control          March 2016


5.  IANA Considerations

   There are no IANA impacts in this memo.

6.  Acknowledgements

   This document is based on the results published in [Nagy14].

   The work of Varun Singh, and Joerg Ott has been partially supported
   by the European Institute of Innovation and Technology (EIT) ICT Labs
   activity RCLD 11882 (2012-2014).  The views expressed here are those
   of the author(s) only.  Neither the European Commission nor the
   EITICT labs is liable for any use that may be made of the information
   in this document.

   Lars Eggert has received funding from the European Union's Horizon
   2020 research and innovation programme 2014-2018 under grant
   agreement No. 644866.  This document reflects only the authors' views
   and the European Commission is not responsible for any use that may
   be made of the information it contains.

7.  References

7.1.  Normative References

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <http://www.rfc-editor.org/info/rfc2119>.

   [RFC3550]  Schulzrinne, H., Casner, S., Frederick, R., and V.
              Jacobson, "RTP: A Transport Protocol for Real-Time
              Applications", STD 64, RFC 3550, DOI 10.17487/RFC3550,
              July 2003, <http://www.rfc-editor.org/info/rfc3550>.

   [RFC3551]  Schulzrinne, H. and S. Casner, "RTP Profile for Audio and
              Video Conferences with Minimal Control", STD 65, RFC 3551,
              DOI 10.17487/RFC3551, July 2003,
              <http://www.rfc-editor.org/info/rfc3551>.

   [RFC3611]  Friedman, T., Ed., Caceres, R., Ed., and A. Clark, Ed.,
              "RTP Control Protocol Extended Reports (RTCP XR)",
              RFC 3611, DOI 10.17487/RFC3611, November 2003,
              <http://www.rfc-editor.org/info/rfc3611>.







Singh, et al.          Expires September 21, 2016              [Page 10]

Internet-Draft      Using FEC for Congestion Control          March 2016


   [RFC4585]  Ott, J., Wenger, S., Sato, N., Burmeister, C., and J. Rey,
              "Extended RTP Profile for Real-time Transport Control
              Protocol (RTCP)-Based Feedback (RTP/AVPF)", RFC 4585,
              DOI 10.17487/RFC4585, July 2006,
              <http://www.rfc-editor.org/info/rfc4585>.

   [RFC5506]  Johansson, I. and M. Westerlund, "Support for Reduced-Size
              Real-Time Transport Control Protocol (RTCP): Opportunities
              and Consequences", RFC 5506, DOI 10.17487/RFC5506, April
              2009, <http://www.rfc-editor.org/info/rfc5506>.

   [I-D.ietf-avtcore-rtp-circuit-breakers]
              Perkins, C. and V. Varun, "Multimedia Congestion Control:
              Circuit Breakers for Unicast RTP Sessions", draft-ietf-
              avtcore-rtp-circuit-breakers-14 (work in progress), March
              2016.

   [I-D.ietf-payload-flexible-fec-scheme]
              Singh, V., Begen, A., Zanaty, M., and G. Mandyam, "RTP
              Payload Format for Flexible Forward Error Correction
              (FEC)", draft-ietf-payload-flexible-fec-scheme-01 (work in
              progress), October 2015.

   [RFC7509]  Huang, R. and V. Singh, "RTP Control Protocol (RTCP)
              Extended Report (XR) for Post-Repair Loss Count Metrics",
              RFC 7509, DOI 10.17487/RFC7509, May 2015,
              <http://www.rfc-editor.org/info/rfc7509>.

7.2.  Informative References

   [RFC4588]  Rey, J., Leon, D., Miyazaki, A., Varsa, V., and R.
              Hakenberg, "RTP Retransmission Payload Format", RFC 4588,
              DOI 10.17487/RFC4588, July 2006,
              <http://www.rfc-editor.org/info/rfc4588>.

   [RFC6363]  Watson, M., Begen, A., and V. Roca, "Forward Error
              Correction (FEC) Framework", RFC 6363,
              DOI 10.17487/RFC6363, October 2011,
              <http://www.rfc-editor.org/info/rfc6363>.

   [I-D.ietf-rmcat-cc-requirements]
              Jesup, R. and Z. Sarker, "Congestion Control Requirements
              for Interactive Real-Time Media", draft-ietf-rmcat-cc-
              requirements-09 (work in progress), December 2014.







Singh, et al.          Expires September 21, 2016              [Page 11]

Internet-Draft      Using FEC for Congestion Control          March 2016


   [I-D.ietf-rmcat-gcc]
              Holmer, S., Lundin, H., Carlucci, G., Cicco, L., and S.
              Mascolo, "A Google Congestion Control Algorithm for Real-
              Time Communication", draft-ietf-rmcat-gcc-01 (work in
              progress), October 2015.

   [I-D.ietf-rmcat-scream-cc]
              Johansson, I. and Z. Sarker, "Self-Clocked Rate Adaptation
              for Multimedia", draft-ietf-rmcat-scream-cc-03 (work in
              progress), February 2016.

   [I-D.ietf-rmcat-eval-test]
              Sarker, Z., Varun, V., Zhu, X., and M. Ramalho, "Test
              Cases for Evaluating RMCAT Proposals", draft-ietf-rmcat-
              eval-test-03 (work in progress), March 2016.

   [RFC5109]  Li, A., Ed., "RTP Payload Format for Generic Forward Error
              Correction", RFC 5109, DOI 10.17487/RFC5109, December
              2007, <http://www.rfc-editor.org/info/rfc5109>.

   [RFC5725]  Begen, A., Hsu, D., and M. Lague, "Post-Repair Loss RLE
              Report Block Type for RTP Control Protocol (RTCP) Extended
              Reports (XRs)", RFC 5725, DOI 10.17487/RFC5725, February
              2010, <http://www.rfc-editor.org/info/rfc5725>.

   [RFC7097]  Ott, J., Singh, V., Ed., and I. Curcio, "RTP Control
              Protocol (RTCP) Extended Report (XR) for RLE of Discarded
              Packets", RFC 7097, DOI 10.17487/RFC7097, January 2014,
              <http://www.rfc-editor.org/info/rfc7097>.

   [Nagy14]   Nagy, M., Singh, V., Ott, J., and L. Eggert, "Congestion
              Control using FEC for Conversational Multimedia
              Communication", Proc. of 5th ACM Internation Conference on
              Multimedia Systems (MMSys 2014) , 3 2014.

   [Devadoss08]
              Devadoss, J., Singh, V., Ott, J., Liu, C., Wang, Y-K., and
              I. Curcio, "Evaluation of Error Resilience Mechanisms for
              3G Conversational Video", Proc. of IEEE International
              Symposium on Multimedia (ISM 2008) , 3 2014.

   [Holmer13]
              Holmer, S., Shemer, M., and M. Paniconi, "Handling Packet
              Loss in WebRTC", Proc. of IEEE International Conference on
              Image Processing (ICIP 2013) , 9 2013.






Singh, et al.          Expires September 21, 2016              [Page 12]

Internet-Draft      Using FEC for Congestion Control          March 2016


Appendix A.  Simulations

   This document is based on the results published in [Nagy14].  See the
   paper for ns-2 and testbed results; more results based on the
   scenarios listed in [I-D.ietf-rmcat-eval-test] will be published
   shorty.

Authors' Addresses

   Varun Singh
   Nemu Dialogue Systems Oy
   Runeberginkatu 4c A 4
   Helsinki  00100
   Finland

   Email: varun.singh@iki.fi
   URI:   http://www.callstats.io/


   Marcin Nagy
   Aalto University
   School of Electrical Engineering
   Otakaari 5 A
   Espoo, FIN  02150
   Finland

   Email: marcin.nagy@aalto.fi


   Joerg Ott
   Aalto University
   School of Electrical Engineering
   Otakaari 5 A
   Espoo, FIN  02150
   Finland

   Email: jo@comnet.tkk.fi


   Lars Eggert
   NetApp
   Sonnenallee 1
   Kirchheim  85551
   Germany

   Phone: +49 151 12055791
   Email: lars@netapp.com
   URI:   http://eggert.org/



Singh, et al.          Expires September 21, 2016              [Page 13]
